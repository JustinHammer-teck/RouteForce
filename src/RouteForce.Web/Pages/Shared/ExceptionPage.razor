@page "/error"
@page "/error/{StatusCodeParam}"
@using RouteForce.Web.Models
@layout _Layout

<section class="min-h-screen flex items-center justify-center bg-base-200 py-12 px-4">
    <div class="card w-full max-w-2xl shadow-2xl bg-base-100">
        <div class="card-body items-center text-center space-y-6 py-16">
            <h1 class="text-9xl font-bold text-error tabular-nums">
                @errorDetail.StatusCode
            </h1>

            <div class="space-y-2">
                <h2 class="text-3xl font-semibold text-base-content">
                    @errorDetail.Title
                </h2>
                <p class="text-lg text-base-content/70 max-w-md">
                    @errorDetail.Message
                </p>
            </div>

            <div class="divider"></div>

            <div class="card-actions">
                <a href="/" class="btn btn-primary btn-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25" />
                    </svg>
                    Go to Home
                </a>
                <button onclick="history.back()" class="btn btn-ghost btn-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18" />
                    </svg>
                    Go Back
                </button>
            </div>
        </div>
    </div>
</section>

@code {
    [Parameter, EditorRequired]
    public string? StatusCodeParam { get; set; }

    [Parameter]
    public string? CustomMessage { get; set; }

    private ErrorDetail errorDetail = ErrorDetail.NotFound();

    protected override void OnInitialized()
    {
        int statusCode = 404;

        if (!string.IsNullOrEmpty(StatusCodeParam) && int.TryParse(StatusCodeParam, out var codeFromParam))
        {
            statusCode = codeFromParam;
        }

        errorDetail = ErrorDetail.FromStatusCode(statusCode, CustomMessage);
    }
}