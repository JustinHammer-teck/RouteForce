@using RouteForce.Application.Common.DTOs

<div id="order-list-container" class="container mx-auto p-4 max-w-7xl">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-4 mb-6">
        <div class="stats shadow bg-base-100">
            <div class="stat">
                <div class="stat-figure text-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5M10 11.25h4M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z" />
                    </svg>
                </div>
                <div class="stat-title">Total Orders</div>
                <div class="stat-value text-primary">@Stats.TotalOrders</div>
                <div class="stat-desc">All orders in the system</div>
            </div>
        </div>

        <div class="card shadow bg-base-100 max-w-md">
            <div class="card-body compact">
                <h2 class="card-title text-base">Order Status Distribution</h2>
                <div class="flex justify-center items-center">
                    <canvas id="orderStatusChart" width="200" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    (function() {
        function initChart() {
            const ctx = document.getElementById('orderStatusChart');
            if (ctx && typeof Chart !== 'undefined') {
                const existingChart = Chart.getChart(ctx);
                if (existingChart) {
                    existingChart.destroy();
                }

                new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ['Created', 'In Transit', 'Delivered'],
                        datasets: [{
                            data: [@Stats.CreatedCount, @Stats.InTransitCount, @Stats.DeliveredCount],
                            backgroundColor: [
                                'rgb(59, 130, 246)',  
                                'rgb(234, 179, 8)',  
                                'rgb(34, 197, 94)'  
                            ],
                            borderColor: [
                                'rgb(29, 78, 216)',
                                'rgb(161, 98, 7)',
                                'rgb(21, 128, 61)'
                            ],
                            borderWidth: 2
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        let label = context.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        label += context.parsed;
                                        const total = @Stats.TotalOrders;
                                        const percentage = total > 0 ? ((context.parsed / total) * 100).toFixed(1) : 0;
                                        label += ' (' + percentage + '%)';
                                        return label;
                                    }
                                }
                            }
                        }
                    }
                });
            }
        }

        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initChart);
        } else {
            initChart();
        }
    })();
</script>

@code {
    [Parameter, EditorRequired]
    public DashboardStatsDto Stats { get; set; } = new();
}
